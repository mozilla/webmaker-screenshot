{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "S3 bucket and Cloudfront configuration for webmaker-screenshot",

  "Parameters": {
    "CloudfrontAliases": {
      "Type": "CommaDelimitedList",
      "Description": "DNS aliases for the Cloudfront distribution"
    },
    "IAMCertificateId": {
      "Type": "String",
      "Description": "Custom SSL certificate to use with Cloudfront distribution. Required if you're setting CloudfrontAliases"
    },
    "IAMAccount": {
      "Type": "String",
      "AllowedValues": ["true", "false"],
      "Default": "false",
      "Description": "IAM user with permissions to upload files to S3 bucket. If you're using pre-signed URLs, you need this"
    },
    "LogBucketName": {
      "Type": "String",
      "Description": "S3 bucket to deliver access logs to"
    },
    "BlitlineCanonicalID": {
      "Type": "String",
      "AllowedValues": ["true", "false"],
      "Default": "false",
      "Description": "Use Canonical ID bucket policies. If you're setting the Canonical ID in Blitline, you need this"
    }
  },

  "Mappings": {
    "S3RegionMap": {
      "ap-northeast-1": {
        "endpoint": "s3-ap-northeast-1.amazonaws.com"
      },
      "ap-southeast-1": {
        "endpoint": "s3-ap-southeast-1.amazonaws.com"
      },
      "ap-southeast-2": {
        "endpoint": "s3-ap-southeast-2.amazonaws.com"
      },
      "eu-central-1": {
        "endpoint": "s3-eu-central-1.amazonaws.com"
      },
      "eu-west-1": {
        "endpoint": "s3-eu-west-1.amazonaws.com"
      },
      "sa-east-1": {
        "endpoint": "s3-sa-east-1.amazonaws.com"
      },
      "us-east-1": {
        "endpoint": "s3.amazonaws.com"
      },
      "us-west-1": {
        "endpoint": "s3-us-west-1.amazonaws.com"
      },
      "us-west-2": {
        "endpoint": "s3-us-west-2.amazonaws.com"
      }
    }
  },

  "Conditions": {
    "UseLogging": {
      "Fn::Not": [{"Fn::Equals": [{"Ref": "LogBucketName"}, ""]}]
    },
    "UseIAMAccount": {
      "Fn::Equals": [{"Ref": "IAMAccount"}, "true"]
    },
    "UseCanonicalAccount": {
      "Fn::Equals": [{"Ref": "BlitlineCanonicalID"}, "true"]
    },
    "UseCloudfrontAliases": {
      "Fn::Not": [{"Fn::Equals": [{"Fn::Join": ["", {"Ref": "CloudfrontAliases"}]}, ""]}]
    },
    "UseCustomSSLCertificate": {
      "Fn::Not": [{"Fn::Equals": [{"Ref": "IAMCertificateId"}, ""]}]
    }
  },

  "Resources": {
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "LoggingConfiguration": {
          "Fn::If": [
            "UseLogging",
            {
              "DestinationBucketName": {
                "Ref": "LogBucketName"
              },
              "LogFilePrefix": {
                "Fn::Join": ["", [{"Ref": "AWS::StackName"}, "/s3/"]]
              }
            },
            {"Ref": "AWS::NoValue"}
          ]
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      }
    },
    "S3BucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "S3Bucket"
        },
        "PolicyDocument": {
          "Version": "2008-10-17",
          "Statement": {
            "Fn::If": [
              "UseCanonicalAccount",
              [
                {
                  "Action": ["s3:GetObject"],
                  "Effect": "Allow",
                  "Resource": { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "S3Bucket" }, "/*"]]},
                  "Principal": "*"
                },
                {
                  "Action": [
                    "s3:PutObjectAcl",
                    "s3:PutObject"
                  ],
                  "Effect": "Allow",
                  "Resource": { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "S3Bucket" }, "/*"]]},
                  "Principal": {
                    "CanonicalUser": "dd81f2e5f9fd34f0fca01d29c62e6ae6cafd33079d99d14ad22fbbea41f36d9a"
                  }
                },
                {
                  "Action": [
                    "s3:GetBucketLocation"
                  ],
                  "Effect": "Allow",
                  "Resource": { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "S3Bucket" }]]},
                  "Principal": {
                    "CanonicalUser": "dd81f2e5f9fd34f0fca01d29c62e6ae6cafd33079d99d14ad22fbbea41f36d9a"
                  }
                }
              ],
              [
                {
                  "Action": ["s3:GetObject"],
                  "Effect": "Allow",
                  "Resource": { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "S3Bucket" }, "/*"]]},
                  "Principal": "*"
                }
              ]
            ]
          }
        }
      }
    },
    "Cloudfront": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Aliases": {
            "Fn::If": [
              "UseCloudfrontAliases",
              {"Ref": "CloudfrontAliases"},
              {"Ref": "AWS::NoValue"}
            ]
          },
          "CustomErrorResponses": [
            {
              "ErrorCachingMinTTL": 5,
              "ErrorCode": 403,
              "ResponseCode": 404,
              "ResponsePagePath": "/4xx-errors/404.svg"
            }
          ],
          "DefaultCacheBehavior": {
            "ForwardedValues": {
              "QueryString": false
            },
            "TargetOriginId": "s3-bucket",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "Logging": {
            "Fn::If": [
              "UseLogging",
              {
                "IncludeCookies": "false",
                "Bucket": {
                  "Fn::Join": ["", [
                    {"Ref": "LogBucketName"},
                    ".",
                    {"Fn::FindInMap": ["S3RegionMap", {"Ref": "AWS::Region"}, "endpoint"]}
                  ]]
                },
                "Prefix": {
                  "Fn::Join": ["", [{"Ref": "AWS::StackName"}, "/cf/"]]
                }
              },
              {"Ref": "AWS::NoValue"}
            ]
          },
          "Origins": [
            {
              "S3OriginConfig": {},
              "DomainName": {
                "Fn::Join": ["", [{"Ref":"S3Bucket"}, ".", {"Fn::FindInMap": ["S3RegionMap", {"Ref": "AWS::Region"}, "endpoint"]}]]
              },
              "Id": "s3-bucket"
            }
          ],
          "ViewerCertificate": {
            "CloudFrontDefaultCertificate": {
              "Fn::If": [
                "UseCustomSSLCertificate",
                {"Ref": "AWS::NoValue"},
                true
              ]
            },
            "IamCertificateId": {
              "Fn::If": [
                "UseCustomSSLCertificate",
                {"Ref": "IAMCertificateId"},
                {"Ref": "AWS::NoValue"}
              ]
            },
            "MinimumProtocolVersion": {
              "Fn::If": [
                "UseCustomSSLCertificate",
                "TLSv1",
                {"Ref": "AWS::NoValue"}
              ]
            },
            "SslSupportMethod": {
              "Fn::If": [
                "UseCustomSSLCertificate",
                "sni-only",
                {"Ref": "AWS::NoValue"}
              ]
            }
          }
        }
      }
    },
    "DeployUser": {
      "Type": "AWS::IAM::User",
      "Condition": "UseIAMAccount",
      "Properties": {
        "Path": "/deploy/",
        "Policies": [{
          "PolicyName": {
            "Fn::Join": ["", ["S3-RW-", {"Ref":"S3Bucket"}]]
          },
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Action": ["s3:DeleteObject", "s3:GetObject", "s3:PutObject"],
              "Effect": "Allow",
              "Resource": { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "S3Bucket" }, "/*" ]]}
            }, {
              "Action": ["s3:ListBucket"],
              "Effect": "Allow",
              "Resource": { "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "S3Bucket" }]]}
            }]
          }
        }]
      }
    },
    "DeployAccessKeys": {
      "Type": "AWS::IAM::AccessKey",
      "Condition": "UseIAMAccount",
      "Properties": {
        "UserName": {
          "Ref": "DeployUser"
        }
      }
    }
  },

  "Outputs": {
    "CloudfrontURL": {
      "Value": {
        "Fn::GetAtt": [ "Cloudfront", "DomainName" ]
      },
      "Description": "URL for Cloudfront distribution"
    },
    "S3Bucket": {
      "Value": {
        "Ref": "S3Bucket"
      },
      "Description": "S3 bucket where website content is stored"
    },
    "DeployAccessId": {
      "Value": {
        "Ref": "DeployAccessKeys"
      },
      "Condition": "UseIAMAccount",
      "Description": "AWS Access ID"
    },
    "DeploySecretKey": {
      "Value": {
        "Fn::GetAtt": ["DeployAccessKeys", "SecretAccessKey"]
      },
      "Condition": "UseIAMAccount",
      "Description": "AWS Secret Key"
    }
  }
}
